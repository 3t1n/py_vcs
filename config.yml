#Multi-configuration and multi-agent job options are not exported to YAML. Configure these options using documentation guidance: https://docs.microsoft.com/vsts/pipelines/process/phases

pool:
  name: Azure Pipelines
variables:
  python.version: '3.7'

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python $(python.version)'
  inputs:
    versionSpec: '$(python.version)'

- script: |
   python -m pip install --upgrade pip
   pip install ConfigArgParse
   pip install lxml
   pip install requests-toolbelt
   pip install json
   pip install requests
  displayName: 'Instalar as dependÃªncias'

- script: |
   pwd
   ls -lia
  displayName: 'Ver Pasta'

- script: |
   cd ../
   git clone https://github.com/3t1n/py_vcs.git 
   ls -lia
   cd py_vcs
   python pbivcs.py -c /home/vsts/work/1/s f1.pbix
   ls -lia
  displayName: 'Ver Pasta copy '

- task: PythonScript@0
  displayName: 'Run a Python script'
  inputs:
    scriptSource: inline
    script: |
        import requests
        from requests_toolbelt import MultipartEncoder
        import json

        url = "https://login.microsoftonline.com/common/oauth2/token"

        payload = {
        'client_id': 'SEU_CLIENT_ID',
        'grant_type': 'password',
        'resource': 'https://analysis.windows.net/powerbi/api',
        'username': 'SEU_EMAIL',
        'password': 'SUA_SENHA',
        'client_secret': 'SEU_CLIENT_SECRET'
        }

        response = requests.request("POST", url, headers={}, data = payload)

        json_encode = json.loads(response.text.encode('utf8'))
        accessToken = json_encode['access_token']

        groupId = "ID_DO_WORKSPACE"
        reportName = "NOME_DO_REPORT"

        url = 'https://api.powerbi.com/v1.0/myorg/groups/' + groupId + '/imports?datasetDisplayName=' + reportName + '&nameConflict=CreateOrOverwrite'

        headers = {
            'Content-Type': 'multipart/form-data',
            'authorization': 'Bearer ' + accessToken
        }

        file_location = 'SEUARQUIVO.pbix'

        files = {'value': (None, open(file_location, 'rb'), 'multipart/form-data')}
        mp_encoder = MultipartEncoder(fields=files)

        r = requests.post(
            url=url,
            data=mp_encoder, 
            headers=headers
        )
            
